class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* dummy = new ListNode(0); // Dummy node before head
        dummy->next = head;
        ListNode* prev = dummy; // Pointer to track unique nodes
        
        while (head) {
            // Check if we are at a duplicate sequence
            if (head->next && head->val == head->next->val) {
                // Skip all nodes with the same value
                while (head->next && head->val == head->next->val) {
                    head = head->next;
                }
                prev->next = head->next; // Remove duplicates
            } else {
                prev = prev->next; // Move prev forward only if unique
            }
            head = head->next; // Move head forward
        }
        
        return dummy->next; // Return new head
    }
};
